@page
@model NEWFLASH.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div style="padding-left: 80px; padding-right: 80px;">
    <div class="text-center text-xxl-center">
        <h1 class="display-5 text-primary fw-light mb-3">WORLD WIDE NEWS</h1>
        <div class="btn-group mb-3" role="group" aria-label="Category Buttons">
            <button type="button" class="btn btn-outline-info" onclick="searchByCategory('business')">Business</button>
            <button type="button" class="btn btn-outline-info" onclick="searchByCategory('entertainment')">Entertainment</button>
            <button type="button" class="btn btn-outline-info" onclick="searchByCategory('general')">General</button>
            <button type="button" class="btn btn-outline-info" onclick="searchByCategory('health')">Health</button>
            <button type="button" class="btn btn-outline-info" onclick="searchByCategory('science')">Science</button>
            <button type="button" class="btn btn-outline-info" onclick="searchByCategory('sports')">Sports</button>
            <button type="button" class="btn btn-outline-info" onclick="searchByCategory('technology')">Technology</button>
        </div>

        <form method="get">
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="Search..." name="query">
                <button class="btn btn-primary" type="submit">Search</button>
            </div>
        </form>

        <div id="carouselExampleControls" class="carousel carousel-dark slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                @{
                    bool isFirst = true;
                    if (Model.NewsArticles?.Articles != null)
                    {
                        int articlesPerPage = 4; // Change this to adjust the number of articles per page
                        int totalArticles = Model.NewsArticles.Articles.Count;
                        int pageCount = (int)Math.Ceiling((double)totalArticles / articlesPerPage);

                        for (int i = 0; i < pageCount; i++)
                        {
                            <div class="carousel-item @(isFirst ? "active" : "")">
                                <div class="row">
                                    @for (int j = i * articlesPerPage; j < Math.Min((i + 1) * articlesPerPage, totalArticles); j++)
                                    {
                                        var article = Model.NewsArticles.Articles[j];
                                        if (!string.IsNullOrEmpty(article.UrlToImage) && !string.IsNullOrEmpty(article.Title) && !string.IsNullOrEmpty(article.Description) && !string.IsNullOrEmpty(article.Url))
                                        {
                                            <div class="col-lg-3">
                                                <div class="card mb-4">
                                                    <img src="@article.UrlToImage" class="card-img-top" alt="@article.Title">
                                                    <div class="card-body">
                                                        <h5 class="card-title">@TruncateTitle(article.Title, 10)</h5>
                                                        <p class="card-text">@TruncateDescription(article.Description, 10)</p>
                                                        <a href="@article.Url" class="btn btn-primary" target="_blank">Read more</a>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                            isFirst = false; // Ensures that only the first item has the 'active' class
                        }
                    }
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
</div>


@functions {
    public string TruncateDescription(string description, int wordLimit)  //Function to limit the words in the description
    {
        if (string.IsNullOrEmpty(description))
        {
            return string.Empty;
        }

        var words = description.Split(' ');
        if (words.Length <= wordLimit)
        {
            return description;
        }

        return string.Join(' ', words.Take(wordLimit)) + "...";
    }
    public string TruncateTitle(string title, int wordLimit)  //Function to limit the words in the description
    {
        if (string.IsNullOrEmpty(title))
        {
            return string.Empty;
        }

        var words = title.Split(' ');
        if (words.Length <= wordLimit)
        {
            return title;
        }

        return string.Join(' ', words.Take(wordLimit)) + "...";
    }
}


<style>
    body {
        background-color: white;
    }
</style>

<script src="~/js/app.js"></script>

<script>
    // Function for Category Search
    function searchByCategory(category) {
        var queryInput = document.querySelector('input[name="query"]');
        queryInput.value = category;
        document.querySelector('form').submit();
    }
</script>